package coding.tixi.day11;

import coding.tixi.ListNode;

/**
 * 1.给定一个链表，可能有环也可能没环，返回第一个入环节点（有的情况）或者null（没环的情况）  getLoopNode
 *      1. 利用容器 hashSet，当放不进的时候说明有环且是第一个入环节点
 *      2. 快慢指针，快指针一次两步，慢指针一次一步，
 *          快指针为null，则没有环
 *          当快指针和慢指针重合，说明有环，
 *          这时候将慢指针回到头节点，快指针改为一次一步
 *          当快慢指针重合时，则肯定为入环节点（不用证明）
 * 2. 给定两个链表，可能有环也可能没环，返回相交的第一个节点，没有则返回null
 *      1. 获取每个链表的第一个入环节点
 *      2. 如果都没环
 *          1. 如果尾节点一样，则不相交
 *          2. 尾节点一样，则看两个链表各自的长度，将长的减去短的得到长度差，让长的先走长度差的步，之后一起走，当两个指针一样时为第一个相交
 *      3. 一个有环一个没环，肯定不相交
 *      4. 两个都有环
 *          1. 当两个入环节点相等，则将入环节点当做尾节点，按照2-2方式方式获取
 *          2. 两个入环节点不相等
 *              1. 从 loop1 开始走，走到loop1（走一圈），没遇到loop2，则不想交
 *              2. 走一圈过程遇到loop2，则loop1和loop2都是相交节点
 *
 * @author linzherong
 * @date 2025/3/30 15:36
 */
public class LinkedTest2 {

    public ListNode getLoopNode(ListNode node) {
        return null;
    }

}
